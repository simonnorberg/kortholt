plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'maven-publish'
    id 'com.jfrog.bintray' version '1.8.5'
}

android {
    compileSdkVersion versions.compile_sdk
    ndkVersion versions.ndk
    defaultConfig {
        minSdkVersion versions.min_sdk
        targetSdkVersion versions.target_sdk
        externalNativeBuild {
            cmake {
                cppFlags '-std=c++14'
                arguments '-DANDROID_STL=c++_shared'
                abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
            }
        }
    }
    externalNativeBuild {
        cmake {
            path "src/main/cpp/CMakeLists.txt"
        }
    }
    sourceSets {
        main {
            java.srcDirs = ['src/main/java', 'src/main/cpp/libpd/java']
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildFeatures {
        buildConfig false
        prefab true
    }
}

dependencies {
    api "org.jetbrains.kotlin:kotlin-stdlib:$versions.kotlin"
    api "androidx.annotation:annotation:$versions.annotation"
    api "androidx.core:core-ktx:$versions.core"
    api "com.google.oboe:oboe:$versions.oboe"
}

def siteUrl = 'https://github.com/simonnorberg/kortholt'
def gitUrl = 'https://github.com/simonnorberg/kortholt.git'

version = '1.6.0'
group = 'net.simno.kortholt'

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                from components.release

                groupId = 'net.simno.kortholt'
                artifactId = 'kortholt'
                version = '1.6.0'

                pom {
                    name = 'kortholt'
                    url = siteUrl
                    licenses {
                        license {
                            name = 'Apache-2.0'
                            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }
                    scm {
                        connection = gitUrl
                        developerConnection = gitUrl
                        url = siteUrl
                    }
                }
            }
        }
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    getArchiveClassifier().set('sources')
}

task javadoc(type: Javadoc) {
    excludes = ['**/*.kt']
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    getArchiveClassifier().set('javadoc')
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

Object propOrDef(String propertyName, Object defaultValue) {
    def propertyValue = project.properties[propertyName]
    return propertyValue != null ? propertyValue : defaultValue
}

bintray {
    user = 'simonnorberg'
    setKey(propOrDef("BINTRAY_KEY", ""))
    setConfigurations('archives')
    publications = ['release']
    pkg {
        repo = 'maven'
        name = 'kortholt'
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        publish = false
    }
}
